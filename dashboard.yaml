views:
  - type: sections
    max_columns: 1
    title: Summary
    path: summary
    icon: mdi:sigma
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.outroors_temperature_average
                    name: Average temperature
                    show_state: true
                  - entity: sensor.aqara_thp_9_humidity
                    name: Humidity
                    show_state: true
                name: Weather stats
                hours_to_show: 24
                points_per_hour: 6
              - show_current: true
                show_forecast: true
                type: weather-forecast
                entity: weather.forecast_home
                secondary_info_attribute: humidity
                forecast_type: daily
              - type: custom:mini-graph-card
                entities:
                  - sensor.aqara_light_sensor_1_illuminance
                line_color: green
                line_width: 8
                font_size: 75
                name: Illuminance
                icon: mdi:weather-sunny
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
              - type: custom:horizon-card
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:mushroom-template-card
                    entity: lock.front_door
                    layout: horizontal
                    primary: Door
                    secondary: >
                      {% set s = states(entity) %} {% if s == 'locked' %}Locked
                      {% elif s == 'unlocked' %}Unlocked {% elif s in
                      ['locking','unlocking'] %}{{ s|title }} {% else %}{{
                      s|default('Unknown')|title }}{% endif %}
                    icon: >
                      {% set s = states(entity) %} {% if s == 'locked'
                      %}mdi:lock {% elif s == 'unlocked' %}mdi:lock-open-variant
                      {% elif s in ['locking','unlocking'] %}mdi:lock-clock {%
                      else %}mdi:lock-question{% endif %}
                    icon_color: >
                      {% set s = states(entity) %} {% if s == 'locked' %}green
                      {% elif s == 'unlocked' %}red {% elif s in
                      ['locking','unlocking'] %}amber {% else %}disabled{% endif
                      %}
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-template-card
                    entity: binary_sensor.ikea_parasoll_door_window_sensor_contact
                    layout: horizontal
                    primary: Gate
                    secondary: >
                      {% if is_state(entity, 'on') %}Open{% else %}Closed{%
                      endif %}
                    icon: >
                      {% if is_state(entity, 'on') %}mdi:gate-open{% else
                      %}mdi:gate{% endif %}
                    icon_color: >
                      {% if is_state(entity, 'on') %}red{% else %}green{% endif
                      %}
                    tap_action:
                      action: more-info
              - type: custom:mushroom-template-card
                primary: >-
                  Electricity price: {{states('sensor.electricity_price') |
                  float}} €/kWh
                secondary: 'Nordpool: {{states(''sensor.nordpool_eur_kwh'') | float}} €/kWh'
                icon: mdi:currency-eur
                fill_container: false
                multiline_secondary: false
                tap_action:
                  action: navigate
                  navigation_path: /utility-room/settings
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                icon_color: blue
              - type: custom:apexcharts-card
                graph_span: 24h
                header:
                  title: Nordpool today (€/kWh)
                  show: true
                span:
                  start: day
                now:
                  show: true
                  label: Now
                series:
                  - entity: sensor.nordpool_kwh_ee_eur
                    type: column
                    float_precision: 4
                    data_generator: |
                      return entity.attributes.raw_today.map((start, index) => {
                        return [new Date(start["start"]).getTime(), entity.attributes.raw_today[index]["value"]];
                      });
              - type: custom:apexcharts-card
                graph_span: 1d
                header:
                  title: Nordpool tomorrow (€/kWh)
                  show: true
                span:
                  start: day
                  offset: +1d
                series:
                  - entity: sensor.nordpool_kwh_ee_eur
                    type: column
                    float_precision: 4
                    data_generator: >
                      return entity.attributes.raw_tomorrow.map((start, index)
                      => {
                        return [new Date(start["start"]).getTime(), entity.attributes.raw_tomorrow[index]["value"]];
                      });
              - type: horizontal-stack
                cards:
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_1_phase_a_current
                    line_color: brown
                    line_width: 8
                    font_size: 75
                    name: L1 (A)
                    icon: mdi:home-lightning-bolt
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_1_phase_b_current
                    line_color: black
                    line_width: 8
                    font_size: 75
                    name: L2 (B)
                    icon: mdi:home-lightning-bolt
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_1_phase_c_current
                    line_color: grey
                    line_width: 8
                    font_size: 75
                    name: L3 (C)
                    icon: mdi:home-lightning-bolt
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
              - type: horizontal-stack
                cards:
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_2_phase_a_current
                    line_color: brown
                    line_width: 8
                    font_size: 75
                    name: L1 (A)
                    icon: mdi:car-electric
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_2_phase_b_current
                    line_color: black
                    line_width: 8
                    font_size: 75
                    name: L2 (B)
                    icon: mdi:car-electric
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
                  - type: custom:mini-graph-card
                    entities:
                      - sensor.shelly_pro_3em_2_phase_c_current
                    line_color: grey
                    line_width: 8
                    font_size: 75
                    name: L3 (C)
                    icon: mdi:car-electric
                    update_interval: 5
                    hour24: true
                    align_icon: left
                    animate: true
              - type: custom:mushroom-template-card
                primary: >-
                  Average home temperature: {{
                  states('sensor.home_temperature_average') }}°C
                secondary: >-
                  Average home humidity: {{
                  states('sensor.home_humidity_average') }}%
                icon: mdi:home-thermometer-outline
                fill_container: false
                multiline_secondary: false
                tap_action:
                  action: navigate
                  navigation_path: /utility-room/thermostats
                icon_color: orange
              - type: custom:mushroom-climate-card
                entity: climate.mira_s_room_ac
                fill_container: false
                primary_info: name
                hvac_modes:
                  - cool
                  - dry
                show_temperature_control: true
                collapsible_controls: false
                layout: horizontal
                icon: mdi:air-conditioner
              - type: custom:mushroom-climate-card
                entity: climate.office_ac
                fill_container: false
                primary_info: name
                hvac_modes:
                  - cool
                  - dry
                show_temperature_control: true
                collapsible_controls: false
                layout: horizontal
                icon: mdi:air-conditioner
              - type: custom:mushroom-climate-card
                entity: climate.living_room_ac
                fill_container: false
                primary_info: name
                hvac_modes:
                  - cool
                  - dry
                show_temperature_control: true
                collapsible_controls: false
                layout: horizontal
                icon: mdi:air-conditioner
              - type: custom:mushroom-climate-card
                entity: climate.bedroom_ac
                fill_container: false
                primary_info: name
                hvac_modes:
                  - cool
                  - dry
                show_temperature_control: true
                collapsible_controls: false
                layout: horizontal
                icon: mdi:air-conditioner
  - icon: mdi:floor-plan
    cards: []
    type: sections
    subview: false
    title: Rooms
    max_columns: 1
    sections:
      - type: grid
        cards:
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.entrance_light_switch_group
                      name: Entrance
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:door" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_10_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_10_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        icons_br: |
                          [[[
                            const lightState = (states['switch.entrance_light_switch_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';

                            const lock = states['lock.front_door'];
                            const hasLock = !!lock;
                            const s = (lock?.state || '').toLowerCase();

                            const isLocked    = s === 'locked';
                            const isUnlocked  = s === 'unlocked';
                            const isPending   = s === 'locking' || s === 'unlocking';
                            const isJammed    = s === 'jammed';
                            const isUnknown   = !s || s === 'unknown' || s === 'unavailable';

                            const lockIcon =
                              isLocked   ? 'mdi:lock' :
                              isPending  ? 'mdi:lock-clock' :
                              isJammed   ? 'mdi:lock-alert' :
                              isUnlocked ? 'mdi:lock-open-variant' :
                                           'mdi:lock';

                            const colorVar =
                              isLocked   ? '--mush-rgb-state-lock-locked' :
                              isPending  ? '--mush-rgb-state-lock-pending' :
                              isUnlocked ? '--mush-rgb-state-lock-unlocked' :
                              isJammed   ? '--mush-rgb-state-lock-pending' : null;

                            const fallbackTriples = {
                              '--mush-rgb-state-lock-locked':   '76,175,80',
                              '--mush-rgb-state-lock-unlocked': '244,67,54',
                              '--mush-rgb-state-lock-pending':  '255,152,0',
                            };

                            const rgbTriple = colorVar ? `var(${colorVar}, ${fallbackTriples[colorVar] || '129,129,129'})` : '129,129,129';
                            const lockBg = isUnknown
                              ? 'rgba(0,0,0,0.06)'
                              : `linear-gradient(135deg, rgba(${rgbTriple},1), rgba(${rgbTriple},0.92))`;
                            const lockIconColor = isUnknown ? 'var(--secondary-text-color)' : '#ffffff';

                            const bulbBadge = `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;margin-left:6px;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;

                            const lockBadge = hasLock ? `<div style="display:flex;align-items:center;justify-content:center;background:${lockBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;margin-left:6px;">
                              <ha-icon icon="${lockIcon}" style="width:12px;height:12px;color:${lockIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>` : '';

                            return `<div style="display:flex;align-items:center;justify-content:flex-end;gap:6px">
                              ${bulbBadge}
                              ${lockBadge}
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 5px
                            - top: 5px
                          temp_tr:
                            - position: absolute
                            - right: 5px
                            - top: 5px
                            - z-index: 3
                          icons_br:
                            - position: absolute
                            - right: 5px
                            - bottom: 5px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 5px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_4
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_4
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.entrance_light_switch_group
                      name: Entrance
                      icon: mdi:light-switch
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >-
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.outdoor_light_switch_button_a_state
                      name: Outdoor lights
                      icon: mdi:outdoor-lamp
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >-
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.outdoor_light_switch_button_b_state
                      name: Scene
                      icon: mdi:home-export-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >-
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.hallway_light_switch_button_a_state
                      name: Hallway
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:transit-connection" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_11_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_11_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            const lightState = (states['switch.hallway_light_switch_button_a_state']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                        entity: light.hallway_light_group
                    - type: custom:button-card
                      entity: climate.thermostat_4
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_4
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.hallway_light_switch_button_a_state
                      name: Ceiling light
                      icon: mdi:spotlight-beam
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Hallway
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.mira_s_room_light_group
                      name: Mira's room
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:face-woman-outline" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_2_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_2_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.mira_s_room_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.mira_s_room_ac
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: >
                        @keyframes spin {
                          from { transform: rotate(0deg); }
                          to { transform: rotate(360deg); }
                        }

                        /* generic pulse that uses CSS variables for color (set
                        per-entity in styles.card) */ @keyframes activePulse {
                          0%   { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                          45%  { box-shadow: 0 28px 56px var(--pulse-strong); transform: translateY(-1px) scale(1.02); }
                          100% { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            // determine mode/state and color mapping
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let iconColor = 'gray';
                            if (m === 'off' || m === '') {
                              iconColor = 'gray';
                            } else if (m.includes('cool')) {
                              iconColor = '#00aaff';
                            } else if (m.includes('heat')) {
                              iconColor = '#ff7043';
                            } else if (m.includes('dry')) {
                              iconColor = '#ffca28';
                            } else if (m.includes('fan')) {
                              iconColor = '#66bb6a';
                            } else if (m.includes('auto')) {
                              iconColor = '#26c6da';
                            } else {
                              iconColor = 'var(--paper-item-icon-color)';
                            }

                            // spin only when not off
                            const anim = (entity.state === 'off') ? 'none' : 'spin 1.5s linear infinite';

                            /* Use flex centering (no translate) and an inner fixed-size box for pixel-perfect centering.
                               Make icon non-interactive so clicks go to the card and no focus/outline moves it. */
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon
                                  icon="mdi:fan"
                                  style="
                                    width:36px;height:36px;
                                    color:${iconColor};
                                    animation:${anim};
                                    display:block;
                                    margin:0;
                                    padding:0;
                                    line-height:0;
                                    pointer-events:none;
                                    user-select:none;
                                  "
                                ></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        mode_badge_icon: |
                          [[[
                            // badge shows only the icon for the current mode; badge bg color corresponds to mode
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let badgeBg = 'rgba(0,0,0,0.06)';
                            let badgeIcon = 'mdi:air-conditioner';
                            if (m === 'off' || m === '') {
                              badgeBg = 'rgba(158,158,158,0.95)'; // gray
                              badgeIcon = 'mdi:power';
                            } else if (m.includes('cool')) {
                              badgeBg = '#00aaff';
                              badgeIcon = 'mdi:snowflake';
                            } else if (m.includes('heat')) {
                              badgeBg = '#ff7043';
                              badgeIcon = 'mdi:fire';
                            } else if (m.includes('dry')) {
                              badgeBg = '#ffca28';
                              badgeIcon = 'mdi:water-percent';   /* humidity icon for dry mode */
                            } else if (m.includes('fan')) {
                              badgeBg = '#66bb6a';
                              badgeIcon = 'mdi:fan';
                            } else if (m.includes('auto')) {
                              badgeBg = '#26c6da';
                              badgeIcon = 'mdi:autorenew';
                            } else {
                              badgeBg = 'rgba(0,0,0,0.06)';
                              badgeIcon = 'mdi:air-conditioner';
                            }

                            // perfectly centered white icon on a small circular colored background (no padding)
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${badgeBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="${badgeIcon}" style="width:12px;height:12px;color:#ffffff;display:block;margin:0;padding:0;line-height:0"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - '--pulse-weak': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.12)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.12)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.12)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.12)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.12)';
                                return 'rgba(0,0,0,0.06)';
                              ]]]
                          - '--pulse-strong': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.26)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.26)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.26)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.26)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.26)';
                                return 'rgba(0,0,0,0.12)';
                              ]]]
                          - animation: |
                              [[[
                                // animate only when active (not off)
                                return (entity.state === 'off') ? 'none' : 'activePulse 2.4s ease-in-out infinite';
                              ]]]
                          - box-shadow: |
                              [[[
                                // initial box-shadow: pulse-weak when active, default otherwise
                                return (entity.state === 'off') ? '0 6px 18px rgba(0,0,0,0.10)' : '0 10px 20px var(--pulse-weak)';
                              ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          mode_badge_icon:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: >
                          [[[ return entity.state === 'off' ? 'climate.turn_on'
                          : 'climate.turn_off'; ]]]
                        service_data:
                          entity_id: climate.mira_s_room_ac
                      hold_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_2
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_2
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.mira_s_room_light_switch_button_a_state
                      name: Ceiling light
                      icon: mdi:ceiling-light-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: light.floor_lamp_light_group
                      name: Floor lamp
                      icon: mdi:floor-lamp-torchiere-variant-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Mira's room
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.office_light_group
                      name: Office
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:chair-rolling" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_3_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_3_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.office_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.office_ac
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: >
                        @keyframes spin {
                          from { transform: rotate(0deg); }
                          to { transform: rotate(360deg); }
                        }

                        /* generic pulse that uses CSS variables for color (set
                        per-entity in styles.card) */ @keyframes activePulse {
                          0%   { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                          45%  { box-shadow: 0 28px 56px var(--pulse-strong); transform: translateY(-1px) scale(1.02); }
                          100% { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            // determine mode/state and color mapping
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let iconColor = 'gray';
                            if (m === 'off' || m === '') {
                              iconColor = 'gray';
                            } else if (m.includes('cool')) {
                              iconColor = '#00aaff';
                            } else if (m.includes('heat')) {
                              iconColor = '#ff7043';
                            } else if (m.includes('dry')) {
                              iconColor = '#ffca28';
                            } else if (m.includes('fan')) {
                              iconColor = '#66bb6a';
                            } else if (m.includes('auto')) {
                              iconColor = '#26c6da';
                            } else {
                              iconColor = 'var(--paper-item-icon-color)';
                            }

                            // spin only when not off
                            const anim = (entity.state === 'off') ? 'none' : 'spin 1.5s linear infinite';

                            /* Use flex centering (no translate) and an inner fixed-size box for pixel-perfect centering.
                               Make icon non-interactive so clicks go to the card and no focus/outline moves it. */
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon
                                  icon="mdi:fan"
                                  style="
                                    width:36px;height:36px;
                                    color:${iconColor};
                                    animation:${anim};
                                    display:block;
                                    margin:0;
                                    padding:0;
                                    line-height:0;
                                    pointer-events:none;
                                    user-select:none;
                                  "
                                ></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        mode_badge_icon: |
                          [[[
                            // badge shows only the icon for the current mode; badge bg color corresponds to mode
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let badgeBg = 'rgba(0,0,0,0.06)';
                            let badgeIcon = 'mdi:air-conditioner';
                            if (m === 'off' || m === '') {
                              badgeBg = 'rgba(158,158,158,0.95)'; // gray
                              badgeIcon = 'mdi:power';
                            } else if (m.includes('cool')) {
                              badgeBg = '#00aaff';
                              badgeIcon = 'mdi:snowflake';
                            } else if (m.includes('heat')) {
                              badgeBg = '#ff7043';
                              badgeIcon = 'mdi:fire';
                            } else if (m.includes('dry')) {
                              badgeBg = '#ffca28';
                              badgeIcon = 'mdi:water-percent';   /* humidity icon for dry mode */
                            } else if (m.includes('fan')) {
                              badgeBg = '#66bb6a';
                              badgeIcon = 'mdi:fan';
                            } else if (m.includes('auto')) {
                              badgeBg = '#26c6da';
                              badgeIcon = 'mdi:autorenew';
                            } else {
                              badgeBg = 'rgba(0,0,0,0.06)';
                              badgeIcon = 'mdi:air-conditioner';
                            }

                            // perfectly centered white icon on a small circular colored background (no padding)
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${badgeBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="${badgeIcon}" style="width:12px;height:12px;color:#ffffff;display:block;margin:0;padding:0;line-height:0"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - '--pulse-weak': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.12)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.12)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.12)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.12)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.12)';
                                return 'rgba(0,0,0,0.06)';
                              ]]]
                          - '--pulse-strong': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.26)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.26)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.26)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.26)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.26)';
                                return 'rgba(0,0,0,0.12)';
                              ]]]
                          - animation: |
                              [[[
                                // animate only when active (not off)
                                return (entity.state === 'off') ? 'none' : 'activePulse 2.4s ease-in-out infinite';
                              ]]]
                          - box-shadow: |
                              [[[
                                // initial box-shadow: pulse-weak when active, default otherwise
                                return (entity.state === 'off') ? '0 6px 18px rgba(0,0,0,0.10)' : '0 10px 20px var(--pulse-weak)';
                              ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          mode_badge_icon:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: >
                          [[[ return entity.state === 'off' ? 'climate.turn_on'
                          : 'climate.turn_off'; ]]]
                        service_data:
                          entity_id: climate.office_ac
                      hold_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_3
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_3
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.office_light_switch_1_button_a_state
                      name: Light switch
                      icon: mdi:ceiling-light-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.office_light_switch_2_button_a_state
                      name: Storage
                      icon: mdi:wall-sconce-flat-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: custom:mushroom-cover-card
                  entity: cover.ikea_fyrtur_roller_blind_1
                  show_position_control: true
                  show_tilt_position_control: false
                  show_buttons_control: true
            title: Office
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.wc_1_light_group
                      name: WC 1
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:toilet" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_12_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_12_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.wc_1_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_4
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_4
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.wc_1_light_switch_button_a_state
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.wc_1_mirror_light_switch_button_a_state
                      name: Mirror light
                      icon: mdi:vanity-light
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: WC 1
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.storeroom_light_switch_button_a_state
                      name: Storeroom
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:package-variant" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right) - storeroom sensors
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_4_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_4_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right circular badge showing light state for storeroom light switch
                            const lightState = (states['switch.storeroom_light_switch_button_a_state']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_4
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_4
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.storeroom_light_switch_button_a_state
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.ikea_inspelning_smart_plug_1
                      name: 3D Printer
                      icon: mdi:power-socket-de
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - position: relative
                          - overflow: hidden
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease, background-position 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                          - background-repeat: no-repeat
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: >-
                                  linear-gradient(90deg, rgba(0,200,83,0.00) 0%,
                                  rgba(0,200,83,0.45) 50%, rgba(0,200,83,0.00)
                                  100%), var(--primary-color)
                              - background-size: 30% 100%, 100% 100%
                              - background-position: '-150% 0, 0 0'
                              - background-repeat: no-repeat
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(0,200,83,0.30), 0 6px 18px
                                  rgba(0,200,83,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(0,200,83,0.22))
                              - z-index: 2
                              - animation: chase 2s linear infinite
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                              - animation: none
                            icon:
                              - color: var(--secondary-text-color)
                      card_mod:
                        style: >
                          /* chasing band: move first background layer
                          left->right while keeping the base color static */

                          @keyframes chase {
                            0%   { background-position: -150% 0, 0 0; }
                            50%  { background-position: 50% 0, 0 0; }
                            100% { background-position: 250% 0, 0 0; }
                          }

                          /* make animation smooth */

                          :host {
                            -webkit-animation-timing-function: linear;
                            animation-timing-function: linear;
                          }
                    - type: custom:button-card
                      entity: switch.ikea_tretakt_smart_plug_1
                      name: Charger
                      icon: mdi:power-socket-de
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - position: relative
                          - overflow: hidden
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease, background-position 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                          - background-repeat: no-repeat
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: >-
                                  linear-gradient(90deg, rgba(0,200,83,0.00) 0%,
                                  rgba(0,200,83,0.45) 50%, rgba(0,200,83,0.00)
                                  100%), var(--primary-color)
                              - background-size: 30% 100%, 100% 100%
                              - background-position: '-150% 0, 0 0'
                              - background-repeat: no-repeat
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(0,200,83,0.30), 0 6px 18px
                                  rgba(0,200,83,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(0,200,83,0.22))
                              - z-index: 2
                              - animation: chase 2s linear infinite
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                              - animation: none
                            icon:
                              - color: var(--secondary-text-color)
                      card_mod:
                        style: >
                          /* chasing band: move first background layer
                          left->right while keeping the base color static */

                          @keyframes chase {
                            0%   { background-position: -150% 0, 0 0; }
                            50%  { background-position: 50% 0, 0 0; }
                            100% { background-position: 250% 0, 0 0; }
                          }

                          /* make animation smooth */

                          :host {
                            -webkit-animation-timing-function: linear;
                            animation-timing-function: linear;
                          }
            title: Storeroom
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.living_room_light_group
                      name: Living room
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:sofa-outline" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.kitchen_living_room_temparature_average', 2);
                            const h = fmt2('sensor.kitchen_living_room_humidity_average', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.living_room_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.living_room_ac
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: >
                        @keyframes spin {
                          from { transform: rotate(0deg); }
                          to { transform: rotate(360deg); }
                        }

                        /* generic pulse that uses CSS variables for color (set
                        per-entity in styles.card) */ @keyframes activePulse {
                          0%   { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                          45%  { box-shadow: 0 28px 56px var(--pulse-strong); transform: translateY(-1px) scale(1.02); }
                          100% { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            // determine mode/state and color mapping
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let iconColor = 'gray';
                            if (m === 'off' || m === '') {
                              iconColor = 'gray';
                            } else if (m.includes('cool')) {
                              iconColor = '#00aaff';
                            } else if (m.includes('heat')) {
                              iconColor = '#ff7043';
                            } else if (m.includes('dry')) {
                              iconColor = '#ffca28';
                            } else if (m.includes('fan')) {
                              iconColor = '#66bb6a';
                            } else if (m.includes('auto')) {
                              iconColor = '#26c6da';
                            } else {
                              iconColor = 'var(--paper-item-icon-color)';
                            }

                            // spin only when not off
                            const anim = (entity.state === 'off') ? 'none' : 'spin 1.5s linear infinite';

                            /* Use flex centering (no translate) and an inner fixed-size box for pixel-perfect centering.
                               Make icon non-interactive so clicks go to the card and no focus/outline moves it. */
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon
                                  icon="mdi:fan"
                                  style="
                                    width:36px;height:36px;
                                    color:${iconColor};
                                    animation:${anim};
                                    display:block;
                                    margin:0;
                                    padding:0;
                                    line-height:0;
                                    pointer-events:none;
                                    user-select:none;
                                  "
                                ></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        mode_badge_icon: |
                          [[[
                            // badge shows only the icon for the current mode; badge bg color corresponds to mode
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let badgeBg = 'rgba(0,0,0,0.06)';
                            let badgeIcon = 'mdi:air-conditioner';
                            if (m === 'off' || m === '') {
                              badgeBg = 'rgba(158,158,158,0.95)'; // gray
                              badgeIcon = 'mdi:power';
                            } else if (m.includes('cool')) {
                              badgeBg = '#00aaff';
                              badgeIcon = 'mdi:snowflake';
                            } else if (m.includes('heat')) {
                              badgeBg = '#ff7043';
                              badgeIcon = 'mdi:fire';
                            } else if (m.includes('dry')) {
                              badgeBg = '#ffca28';
                              badgeIcon = 'mdi:water-percent';   /* humidity icon for dry mode */
                            } else if (m.includes('fan')) {
                              badgeBg = '#66bb6a';
                              badgeIcon = 'mdi:fan';
                            } else if (m.includes('auto')) {
                              badgeBg = '#26c6da';
                              badgeIcon = 'mdi:autorenew';
                            } else {
                              badgeBg = 'rgba(0,0,0,0.06)';
                              badgeIcon = 'mdi:air-conditioner';
                            }

                            // perfectly centered white icon on a small circular colored background (no padding)
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${badgeBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="${badgeIcon}" style="width:12px;height:12px;color:#ffffff;display:block;margin:0;padding:0;line-height:0"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - '--pulse-weak': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.12)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.12)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.12)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.12)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.12)';
                                return 'rgba(0,0,0,0.06)';
                              ]]]
                          - '--pulse-strong': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.26)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.26)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.26)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.26)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.26)';
                                return 'rgba(0,0,0,0.12)';
                              ]]]
                          - animation: |
                              [[[
                                // animate only when active (not off)
                                return (entity.state === 'off') ? 'none' : 'activePulse 2.4s ease-in-out infinite';
                              ]]]
                          - box-shadow: |
                              [[[
                                // initial box-shadow: pulse-weak when active, default otherwise
                                return (entity.state === 'off') ? '0 6px 18px rgba(0,0,0,0.10)' : '0 10px 20px var(--pulse-weak)';
                              ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          mode_badge_icon:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: >
                          [[[ return entity.state === 'off' ? 'climate.turn_on'
                          : 'climate.turn_off'; ]]]
                        service_data:
                          entity_id: climate.living_room_ac
                      hold_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_5_7_group
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_5_7_group
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.kitchen_tabletop_light_switch_button_a_state
                      name: Tabletop
                      icon: mdi:countertop-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.kitchen_light_switch_button_a_state
                      name: Sink
                      icon: mdi:faucet-variant
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.kitchen_light_switch_button_b_state
                      name: Table
                      icon: mdi:table-furniture
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.sofa_light_switch_group
                      name: Sofa light
                      icon: mdi:wall-sconce-flat-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.ikea_tradfri_control_outlet_2
                      name: Ambient light
                      icon: mdi:globe-light-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.terrace_light_switch_button_a_state
                      name: Terrace
                      icon: mdi:awning-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Living room
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.bedroom_light_group
                      name: Bedroom
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:bed-double-outline" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_6_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_6_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.bedroom_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.bedroom_ac
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: >
                        @keyframes spin {
                          from { transform: rotate(0deg); }
                          to { transform: rotate(360deg); }
                        }

                        /* generic pulse that uses CSS variables for color (set
                        per-entity in styles.card) */ @keyframes activePulse {
                          0%   { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                          45%  { box-shadow: 0 28px 56px var(--pulse-strong); transform: translateY(-1px) scale(1.02); }
                          100% { box-shadow: 0 10px 20px var(--pulse-weak); transform: translateY(0) scale(1); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            // determine mode/state and color mapping
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let iconColor = 'gray';
                            if (m === 'off' || m === '') {
                              iconColor = 'gray';
                            } else if (m.includes('cool')) {
                              iconColor = '#00aaff';
                            } else if (m.includes('heat')) {
                              iconColor = '#ff7043';
                            } else if (m.includes('dry')) {
                              iconColor = '#ffca28';
                            } else if (m.includes('fan')) {
                              iconColor = '#66bb6a';
                            } else if (m.includes('auto')) {
                              iconColor = '#26c6da';
                            } else {
                              iconColor = 'var(--paper-item-icon-color)';
                            }

                            // spin only when not off
                            const anim = (entity.state === 'off') ? 'none' : 'spin 1.5s linear infinite';

                            /* Use flex centering (no translate) and an inner fixed-size box for pixel-perfect centering.
                               Make icon non-interactive so clicks go to the card and no focus/outline moves it. */
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon
                                  icon="mdi:fan"
                                  style="
                                    width:36px;height:36px;
                                    color:${iconColor};
                                    animation:${anim};
                                    display:block;
                                    margin:0;
                                    padding:0;
                                    line-height:0;
                                    pointer-events:none;
                                    user-select:none;
                                  "
                                ></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        mode_badge_icon: |
                          [[[
                            // badge shows only the icon for the current mode; badge bg color corresponds to mode
                            const modeRaw = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                            const m = modeRaw;
                            let badgeBg = 'rgba(0,0,0,0.06)';
                            let badgeIcon = 'mdi:air-conditioner';
                            if (m === 'off' || m === '') {
                              badgeBg = 'rgba(158,158,158,0.95)'; // gray
                              badgeIcon = 'mdi:power';
                            } else if (m.includes('cool')) {
                              badgeBg = '#00aaff';
                              badgeIcon = 'mdi:snowflake';
                            } else if (m.includes('heat')) {
                              badgeBg = '#ff7043';
                              badgeIcon = 'mdi:fire';
                            } else if (m.includes('dry')) {
                              badgeBg = '#ffca28';
                              badgeIcon = 'mdi:water-percent';   /* humidity icon for dry mode */
                            } else if (m.includes('fan')) {
                              badgeBg = '#66bb6a';
                              badgeIcon = 'mdi:fan';
                            } else if (m.includes('auto')) {
                              badgeBg = '#26c6da';
                              badgeIcon = 'mdi:autorenew';
                            } else {
                              badgeBg = 'rgba(0,0,0,0.06)';
                              badgeIcon = 'mdi:air-conditioner';
                            }

                            // perfectly centered white icon on a small circular colored background (no padding)
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${badgeBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="${badgeIcon}" style="width:12px;height:12px;color:#ffffff;display:block;margin:0;padding:0;line-height:0"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - '--pulse-weak': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.12)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.12)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.12)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.12)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.12)';
                                return 'rgba(0,0,0,0.06)';
                              ]]]
                          - '--pulse-strong': |
                              [[[
                                const m = (entity.state || entity.attributes?.hvac_mode || '').toString().toLowerCase();
                                if (m.includes('cool')) return 'rgba(0,170,255,0.26)';
                                if (m.includes('heat')) return 'rgba(255,112,67,0.26)';
                                if (m.includes('dry')) return 'rgba(255,202,40,0.26)';
                                if (m.includes('fan')) return 'rgba(102,187,106,0.26)';
                                if (m.includes('auto')) return 'rgba(38,198,218,0.26)';
                                return 'rgba(0,0,0,0.12)';
                              ]]]
                          - animation: |
                              [[[
                                // animate only when active (not off)
                                return (entity.state === 'off') ? 'none' : 'activePulse 2.4s ease-in-out infinite';
                              ]]]
                          - box-shadow: |
                              [[[
                                // initial box-shadow: pulse-weak when active, default otherwise
                                return (entity.state === 'off') ? '0 6px 18px rgba(0,0,0,0.10)' : '0 10px 20px var(--pulse-weak)';
                              ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          mode_badge_icon:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: >
                          [[[ return entity.state === 'off' ? 'climate.turn_on'
                          : 'climate.turn_off'; ]]]
                        service_data:
                          entity_id: climate.bedroom_ac
                      hold_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_6
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_6
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.bedside_lamp_light_switch_1
                      name: Left lamp
                      icon: mdi:lamp
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.bedroom_light_switch_button_a_state
                      name: Ciling light
                      icon: mdi:ceiling-light
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.bedside_lamp_light_switch_2
                      name: Left lamp
                      icon: mdi:lamp
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  0 8px 24px rgba(0,0,0,0.12), 0 24px 48px
                                  rgba(255,193,7,0.30);
                              - filter: drop-shadow(0 20px 36px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: custom:button-card
                  entity: input_datetime.alarm_clock
                  name: Alarm
                  show_name: false
                  show_state: false
                  show_icon: false
                  show_label: false
                  styles:
                    card:
                      - border-radius: 12px
                      - padding: 10px
                      - height: 100px
                      - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                      - position: relative
                      - background: var(--card-background-color)
                      - transition: box-shadow 0.18s ease, transform 0.12s ease
                    custom_fields:
                      icon_tl:
                        - position: absolute
                        - left: 12px
                        - top: 12px
                      top_right:
                        - position: absolute
                        - right: 8px
                        - top: 8px
                        - display: flex
                        - flex-direction: column
                        - gap: 10px
                        - align-items: flex-end
                      next_line:
                        - position: absolute
                        - left: 12px
                        - bottom: 12px
                        - font-size: 12px
                        - color: var(--secondary-text-color)
                      name_bl:
                        - position: absolute
                        - left: 12px
                        - top: 52px
                        - font-size: 13px
                        - font-weight: 600
                        - color: var(--primary-text-color)
                  custom_fields:
                    icon_tl: |
                      [[[
                        const enabledWeek = (states['input_boolean.alarm_clock_state']?.state === 'on');
                        const enabledWeekend = (states['input_boolean.alarm_clock_state_weekends']?.state === 'on');
                        const anyOn = enabledWeek || enabledWeekend;
                        const tokenBg = anyOn ? 'linear-gradient(135deg, rgba(255,193,7,0.12), rgba(255,193,7,0.06))' : 'rgba(0,0,0,0.04)';
                        const iconColor = anyOn ? 'rgb(255,193,7)' : 'var(--paper-item-icon-color)';
                        return '<div style="width:40px;height:40px;border-radius:10px;display:flex;align-items:center;justify-content:center;background:' + tokenBg + ';">'
                          + '<ha-icon icon="mdi:alarm" style="width:20px;height:20px;color:' + iconColor + ';display:block"></ha-icon>'
                          + '</div>';
                      ]]]
                    top_right: |
                      [[[
                        function fmt(id) {
                          const s = states[id]?.state || '';
                          if (!s) return '—';
                          const m = String(s).match(/(\d{1,2}:\d{2})/);
                          return m ? m[1] : s;
                        }
                        const wk_time = fmt('input_datetime.alarm_clock');
                        const we_time = fmt('input_datetime.alarm_clock_weekends');
                        const wk_on = (states['input_boolean.alarm_clock_state']?.state === 'on');
                        const we_on = (states['input_boolean.alarm_clock_state_weekends']?.state === 'on');

                        // build rows using a native ha-entity-toggle and a clickable time badge
                        function row(timeEntity, boolEntity, timeLabel, isOn) {
                          // safe: no inline callService; ha-entity-toggle handles toggling natively.
                          // time badge opens more-info for the input_datetime and stops propagation.
                          const chipBg = 'rgba(0,0,0,0.06)';
                          // larger time badge for easy tapping
                          const chipStyle = 'display:inline-flex;align-items:center;justify-content:center;padding:6px 10px;border-radius:999px;background:' + chipBg + ';font-size:13px;color:var(--secondary-text-color);min-width:64px;text-align:center;white-space:nowrap;cursor:pointer;';
                          // return a row using ha-entity-toggle (native) + a <div> that dispatches hass-more-info
                          return '<div style="display:flex;align-items:center;gap:10px">'
                            + '<div style="width:36px;height:22px;display:flex;align-items:center;justify-content:center;">'
                            + '<ha-entity-toggle entity="' + boolEntity + '"></ha-entity-toggle>'
                            + '</div>'
                            + '<div style="' + chipStyle + '" onclick="window.dispatchEvent(new CustomEvent(\'hass-more-info\',{detail:{entityId:\'' + timeEntity + '\'}}));event.stopPropagation();">'
                            + '<span style="font-weight:700">' + timeLabel + '</span>'
                            + '</div>'
                            + '</div>';
                        }

                        return '<div style="display:flex;flex-direction:column;align-items:flex-end;gap:10px">'
                          + row('input_datetime.alarm_clock','input_boolean.alarm_clock_state', wk_time, wk_on)
                          + row('input_datetime.alarm_clock_weekends','input_boolean.alarm_clock_state_weekends', we_time, we_on)
                          + '</div>';
                      ]]]
                    next_line: |
                      [[[
                        // Compute the next enabled alarm (weekday/weekend) and display relative time.
                        const now = new Date();

                        function parseTime(s) {
                          if (!s) return null;
                          const m = String(s).match(/(\d{1,2}):(\d{2})/);
                          if (!m) return null;
                          return { hour: parseInt(m[1],10), minute: parseInt(m[2],10) };
                        }

                        const wkEnabled = (states['input_boolean.alarm_clock_state']?.state === 'on');
                        const weEnabled = (states['input_boolean.alarm_clock_state_weekends']?.state === 'on');
                        const wkT = parseTime(states['input_datetime.alarm_clock']?.state);
                        const weT = parseTime(states['input_datetime.alarm_clock_weekends']?.state);

                        const candidates = [];
                        for (let d = 0; d < 14; d++) {
                          const dt = new Date(now.getFullYear(), now.getMonth(), now.getDate() + d);
                          const day = dt.getDay();
                          const isWeekend = (day === 0 || day === 6);
                          if (isWeekend && weEnabled && weT) {
                            candidates.push({ when: new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), weT.hour, weT.minute, 0, 0), label: 'WEEKEND' });
                          }
                          if (!isWeekend && wkEnabled && wkT) {
                            candidates.push({ when: new Date(dt.getFullYear(), dt.getMonth(), dt.getDate(), wkT.hour, wkT.minute, 0, 0), label: 'WEEKDAY' });
                          }
                        }

                        const FUTURE_EPS = 500;
                        const future = candidates.filter(c => (c.when.getTime() - now.getTime()) > -FUTURE_EPS);
                        if (!future.length) {
                          return '<div>Next: <span style="font-weight:700;margin-left:6px">OFF</span></div>';
                        }

                        future.sort((a,b) => a.when - b.when);
                        const next = future[0].when;

                        function pad(n){ return n < 10 ? ('0' + n) : String(n); }

                        const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());
                        const dayDiff = Math.round((next - todayStart) / 86400000);
                        let dayText = '';
                        if (dayDiff === 0) dayText = 'today';
                        else if (dayDiff === 1) dayText = 'tomorrow';
                        else {
                          const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
                          dayText = 'on ' + days[next.getDay()];
                        }

                        const deltaMs = next.getTime() - now.getTime();
                        const totalMinutes = Math.max(0, Math.floor(deltaMs / 60000));
                        const hours = Math.floor(totalMinutes / 60);
                        const minutes = totalMinutes % 60;
                        let inText = '';
                        if (hours > 0) inText = 'in ' + hours + ' hour' + (hours>1?'s':'') + ', ' + minutes + ' minute' + (minutes!==1?'s':'');
                        else inText = 'in ' + minutes + ' minute' + (minutes!==1?'s':'');

                        return '<div>Next: <span style="font-weight:700;margin-left:6px">' + dayText + ' at ' + pad(next.getHours()) + ':' + pad(next.getMinutes()) + '</span>'
                          + ' <span style="margin-left:8px;color:var(--secondary-text-color)">(' + inText + ')</span></div>';
                      ]]]
                    name_bl: |
                      [[[
                        return '<div>Alarm</div>';
                      ]]]
                  tap_action:
                    action: none
                  hold_action:
                    action: none
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.wc_2_light_group
                      name: WC 2
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:toilet" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_13_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_13_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.wc_2_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_8
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_8
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.wc_2_light_switch_group
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.wc_2_mirror_light_switch_button_a_state
                      name: Mirror light
                      icon: mdi:vanity-light
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: WC 2
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.shower_room_light_group
                      name: Shower room
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:shower-head" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_8_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_8_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.shower_room_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                    - type: custom:button-card
                      entity: climate.thermostat_8
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_8
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.shower_room_light_switch_button_a_state
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                        entity: light.shower_room_ceiling_light_group
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.shower_room_mirror_light_switch_button_a_state
                      name: Mirror light
                      icon: mdi:mirror-rectangle
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Shower room
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.shower_room_light_switch_button_b_state
                      name: Sauna
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:heat-wave" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_19_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_19_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.shower_room_light_switch_button_b_state']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                        entity: light.hallway_light_group
                    - type: custom:button-card
                      entity: climate.thermostat_8
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_8
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.shower_room_light_switch_button_b_state
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Sauna
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.storeroom_light_switch_button_a_state
                      name: Utility room
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:cog" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right) - storeroom sensors
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_15_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_15_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right circular badge showing light state for storeroom light switch
                            const lightState = (states['switch.utility_room_light_switch_button_a_state']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.utility_room_light_switch_button_a_state
                      name: Light switch
                      icon: mdi:light-switch-off
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.ikea_inspelning_smart_plug_2
                      name: Charger
                      icon: mdi:power-socket-de
                      show_state: false
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - position: relative
                          - overflow: hidden
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease, background-position 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                          - background-repeat: no-repeat
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: >-
                                  linear-gradient(90deg, rgba(0,200,83,0.00) 0%,
                                  rgba(0,200,83,0.45) 50%, rgba(0,200,83,0.00)
                                  100%), var(--primary-color)
                              - background-size: 30% 100%, 100% 100%
                              - background-position: '-150% 0, 0 0'
                              - background-repeat: no-repeat
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(0,200,83,0.30), 0 6px 18px
                                  rgba(0,200,83,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(0,200,83,0.22))
                              - z-index: 2
                              - animation: chase 2s linear infinite
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                              - animation: none
                            icon:
                              - color: var(--secondary-text-color)
                      card_mod:
                        style: >
                          /* chasing band: move first background layer
                          left->right while keeping the base color static */

                          @keyframes chase {
                            0%   { background-position: -150% 0, 0 0; }
                            50%  { background-position: 50% 0, 0 0; }
                            100% { background-position: 250% 0, 0 0; }
                          }

                          /* make animation smooth */

                          :host {
                            -webkit-animation-timing-function: linear;
                            animation-timing-function: linear;
                          }
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.workshop_light_switch_button_a_state
                      name: Workshop
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:hammer-screwdriver" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.aqara_thp_1_temperature', 2);
                            const h = fmt2('sensor.aqara_thp_1_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        bulb_br: |
                          [[[
                            // bottom-right pixel-perfect circular badge (icon centered)
                            const lightState = (states['switch.workshop_light_switch_button_a_state']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';
                            return `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          bulb_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                      hold_action:
                        action: more-info
                        entity: light.hallway_light_group
                    - type: custom:button-card
                      entity: climate.thermostat_1
                      show_name: false
                      show_state: false
                      show_label: false
                      show_icon: false
                      extra_styles: |
                        @keyframes heatingGlow {
                          0%   { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                          50%  { box-shadow: 0 0 30px rgba(255,112,67,0.32); }
                          100% { box-shadow: 0 6px 18px rgba(0,0,0,0.10); }
                        }
                      custom_fields:
                        icon_center: |
                          [[[
                            const hvacAction = (entity.attributes?.hvac_action || '').toString().toLowerCase();
                            const state = (entity.state || '').toString().toLowerCase();
                            let iconColor = 'var(--paper-item-icon-color)';
                            if (state === 'off') {
                              iconColor = 'gray';
                            } else if (hvacAction === 'heating' || state === 'heating') {
                              iconColor = '#ff7043';
                            } else {
                              iconColor = '#66bb6a';
                            }
                            return `<div style="width:52px;height:52px;display:flex;align-items:center;justify-content:center;border-radius:999px;box-shadow:none;pointer-events:none;user-select:none">
                              <div style="width:44px;height:44px;display:flex;align-items:center;justify-content:center;">
                                <ha-icon icon="mdi:thermostat" style="width:44px;height:44px;color:${iconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                              </div>
                            </div>`;
                          ]]]
                        temp_tr: |
                          [[[
                            const fmt = (v) => {
                              if (v === undefined || v === null || v === '') return '—';
                              const n = Number(v);
                              return Number.isFinite(n) ? n.toFixed(1) : String(v);
                            };
                            const raw = entity.attributes?.temperature ?? entity.attributes?.target_temp ?? entity.attributes?.target_temperature ?? entity.attributes?.setpoint ?? entity.attributes?.away_temperature;
                            const t = fmt(raw);
                            return `<div style="display:inline-flex;align-items:center;justify-content:center;padding:2px 0;border-radius:999px;background:#ff7043;font-size:11px;color:#fff;width:auto;text-align:center;white-space:nowrap;">
                              <span style="font-weight:700;line-height:1;padding:0 2px">${t}°</span>
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - padding: 10px
                          - transition: >-
                              transform 0.18s ease, box-shadow 0.28s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - backdrop-filter: blur(10px)
                          - width: 80px
                          - height: 80px
                          - position: relative
                          - animation: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ?
                              'heatingGlow 2.4s ease-in-out infinite' : 'none';
                              ]]]
                          - box-shadow: >
                              [[[ return (entity.attributes?.hvac_action ||
                              '').toString().toLowerCase() === 'heating' ? '0
                              6px 18px rgba(0,0,0,0.10)' : '0 6px 18px
                              rgba(0,0,0,0.10)'; ]]]
                        custom_fields:
                          icon_center:
                            - position: absolute
                            - left: 50%
                            - top: 50%
                            - transform: translate(-50%, -50%)
                            - z-index: 2
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                      tap_action:
                        action: call-service
                        service: climate.set_hvac_mode
                        service_data:
                          entity_id: climate.thermostat_1
                          hvac_mode: >
                            [[[ return entity.state === 'off' ? 'heat' : 'off';
                            ]]]
                      hold_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.workshop_light_switch_button_a_state
                      name: Light switch
                      icon: mdi:light-switch
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
            title: Workshop
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
          - type: custom:mod-card
            card:
              type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.outdoors_light_group
                      name: Outdoors
                      show_state: false
                      show_label: false
                      show_icon: false
                      custom_fields:
                        icon_tl: |
                          [[[
                            // return only the icon; wrapper handles position/size
                            return `<ha-icon icon="mdi:tree-outline" style="width:40px;height:40px;"></ha-icon>`;
                          ]]]
                        temp_tr: |
                          [[[
                            // ultra-compact combined temp/humidity (top-right)
                            function fmt2(id, digits = 2) {
                              const s = states[id]?.state;
                              if (s === undefined || s === null || s === '') return '—';
                              const n = parseFloat(s);
                              return Number.isFinite(n) ? n.toFixed(digits) : String(s);
                            }
                            const t = fmt2('sensor.outroors_temperature_average', 2);
                            const h = fmt2('sensor.aqara_thp_9_humidity', 2);

                            return `<div style="display:inline-flex;align-items:center;gap:1px;padding:2px 6px;border-radius:999px;background:rgba(0,0,0,0.06);font-size:11px;color:var(--secondary-text-color);line-height:1;white-space:nowrap;box-sizing:border-box;">
                              <ha-icon icon="mdi:thermometer" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${t}°</span>
                              <span style="opacity:0.6">|</span>
                              <ha-icon icon="mdi:water-percent" style="width:11px;height:11px;margin:0;padding:0;color:var(--secondary-text-color)"></ha-icon>
                              <span style="font-weight:700;margin:0;padding:0">${h}%</span>
                            </div>`;
                          ]]]
                        icons_br: |
                          [[[
                            // bottom-right: bulb + gate badges in a tight row

                            // --- Bulb (unchanged) ---
                            const lightState = (states['switch.outdoors_light_group']?.state || '').toLowerCase();
                            const bulbOn = lightState === 'on';
                            const bulbBg = bulbOn ? 'linear-gradient(135deg,#ffcf57,#ffb200)' : 'rgba(0,0,0,0.06)';
                            const bulbIconColor = bulbOn ? '#ffffff' : 'var(--secondary-text-color)';

                            const bulbBadge = `<div style="display:flex;align-items:center;justify-content:center;background:${bulbBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;margin-left:6px;">
                              <ha-icon icon="mdi:lightbulb" style="width:12px;height:12px;color:${bulbIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>`;

                            // --- Gate (contact sensor) ---
                            const gate = states['binary_sensor.ikea_parasoll_door_window_sensor_contact'];
                            const hasGate = !!gate;
                            const s = (gate?.state || '').toLowerCase();

                            // Binary sensor states: on=open, off=closed; also unknown/unavailable
                            const isOpen    = s === 'on' || s === 'open';
                            const isClosed  = s === 'off' || s === 'closed';
                            const isUnknown = s === 'unknown' || s === 'unavailable' || !s;

                            // Icon: gate-open vs gate (fallback to gate for unknown)
                            const gateIcon =
                              isOpen   ? 'mdi:gate-open' :
                              'mdi:gate';

                            // Use the same Mushroom-like colors as the lock example:
                            // closed -> "locked" green, open -> "unlocked" red, unknown -> "pending" orange (but shown as grey bg)
                            const fallbackTriples = {
                              '--mush-rgb-state-lock-locked':   '76,175,80',   // green
                              '--mush-rgb-state-lock-unlocked': '244,67,54',   // red
                              '--mush-rgb-state-lock-pending':  '255,152,0',   // orange
                            };

                            const colorVar =
                              isClosed ? '--mush-rgb-state-lock-locked' :
                              isOpen   ? '--mush-rgb-state-lock-unlocked' :
                                         '--mush-rgb-state-lock-pending';

                            const rgbTriple = `var(${colorVar}, ${fallbackTriples[colorVar]})`;

                            const gateBg = isUnknown
                              ? 'rgba(0,0,0,0.06)'
                              : `linear-gradient(135deg, rgba(${rgbTriple},1), rgba(${rgbTriple},0.92))`;
                            const gateIconColor = isUnknown ? 'var(--secondary-text-color)' : '#ffffff';

                            const gateBadge = hasGate ? `<div style="display:flex;align-items:center;justify-content:center;background:${gateBg};border-radius:999px;width:20px;height:20px;box-sizing:border-box;margin-left:6px;">
                              <ha-icon icon="${gateIcon}" style="width:12px;height:12px;color:${gateIconColor};display:block;margin:0;padding:0;line-height:0;pointer-events:none;"></ha-icon>
                            </div>` : '';

                            return `<div style="display:flex;align-items:center;justify-content:flex-end;gap:6px">
                              ${bulbBadge}
                              ${gateBadge}
                            </div>`;
                          ]]]
                      styles:
                        card:
                          - border-radius: 12px
                          - height: 80px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - position: relative
                          - padding-left: 16px
                        custom_fields:
                          icon_tl:
                            - position: absolute
                            - left: 12px
                            - top: 8px
                          temp_tr:
                            - position: absolute
                            - right: 8px
                            - top: 8px
                            - z-index: 3
                          icons_br:
                            - position: absolute
                            - right: 8px
                            - bottom: 8px
                            - z-index: 3
                        name:
                          - position: absolute
                          - left: 12px
                          - bottom: 8px
                          - font-weight: 500
                          - font-size: 14px
                          - color: var(--primary-text-color)
                      tap_action:
                        action: more-info
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.outdoor_light_switch_button_a_state
                      name: Outdoor lights
                      icon: mdi:outdoor-lamp
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.shelly_plus_1_1_switch_0
                      name: Parking
                      icon: mdi:parking
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.terrace_light_switch_button_a_state
                      name: Terrace
                      icon: mdi:awning-outline
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: horizontal-stack
                  cards:
                    - type: custom:button-card
                      entity: switch.ikea_tretakt_smart_plug_2
                      name: Heater
                      icon: mdi:patio-heater
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                    - type: custom:button-card
                      entity: switch.shelly_plus_1_2_switch_0
                      name: String lights
                      icon: mdi:string-lights
                      show_state: false
                      tap_action:
                        action: toggle
                      hold_action:
                        action: more-info
                      styles:
                        card:
                          - border-radius: 12px
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - transition: >-
                              transform 0.12s ease, box-shadow 0.12s ease,
                              filter 0.12s ease
                          - background: var(--card-background-color)
                          - height: 80px
                        name:
                          - font-weight: 600
                          - font-size: 12px
                          - justify-self: center
                        icon:
                          - width: 28px
                      state:
                        - value: 'on'
                          styles:
                            card:
                              - background: var(--primary-color)
                              - color: var(--primary-background-color)
                              - transform: translateY(2px)
                              - box-shadow: >
                                  inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                                  rgba(255,193,7,0.30), 0 6px 18px
                                  rgba(255,193,7,0.16)
                              - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                              - z-index: 2
                            icon:
                              - color: var(--primary-background-color)
                        - value: 'off'
                          styles:
                            card:
                              - background: >-
                                  var(--ha-card-background,
                                  var(--card-background-color))
                              - transform: translateY(0)
                              - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                              - filter: none
                              - z-index: 0
                            icon:
                              - color: var(--secondary-text-color)
                - type: custom:button-card
                  entity: switch.shelly_plus_1_3
                  name: Sliding date
                  icon: mdi:gate-arrow-left
                  show_state: false
                  tap_action:
                    action: toggle
                  hold_action:
                    action: more-info
                  styles:
                    card:
                      - border-radius: 12px
                      - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                      - transition: >-
                          transform 0.12s ease, box-shadow 0.12s ease, filter
                          0.12s ease
                      - background: var(--card-background-color)
                      - height: 80px
                    name:
                      - font-weight: 600
                      - font-size: 12px
                      - justify-self: center
                    icon:
                      - width: 28px
                  state:
                    - value: 'on'
                      styles:
                        card:
                          - background: var(--primary-color)
                          - color: var(--primary-background-color)
                          - transform: translateY(2px)
                          - box-shadow: >
                              inset 0 6px 14px rgba(0,0,0,0.20), 0 18px 40px
                              rgba(255,193,7,0.30), 0 6px 18px
                              rgba(255,193,7,0.16)
                          - filter: drop-shadow(0 18px 32px rgba(255,193,7,0.22))
                          - z-index: 2
                        icon:
                          - color: var(--primary-background-color)
                    - value: 'off'
                      styles:
                        card:
                          - background: >-
                              var(--ha-card-background,
                              var(--card-background-color))
                          - transform: translateY(0)
                          - box-shadow: 0 6px 18px rgba(0,0,0,0.10)
                          - filter: none
                          - z-index: 0
                        icon:
                          - color: var(--secondary-text-color)
            style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }style: |
              ha-card {
                border-radius: 16px;
                /* gradient using theme rgb variable (fallback to light values if not present) */
                background: linear-gradient(
                  180deg,
                  rgba(var(--rgb-card-background-color, 255,255,255), 0.92),
                  rgba(var(--rgb-card-background-color, 250,250,250), 0.85)
                );
                box-shadow: 0 10px 30px rgba(0,0,0,0.12);
                padding: 12px;
                color: var(--primary-text-color);
                margin-bottom: 20px
              }
    path: rooms
  - type: sections
    max_columns: 1
    title: 3D printer
    path: 3d-printer
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-chips-card
                chips:
                  - type: entity
                    entity: sensor.mainsailos_filename
                    icon: mdi:file-outline
                    content_info: state
                    tap_action:
                      action: more-info
                  - type: entity
                    entity: sensor.mainsailos_progress
                    icon: mdi:progress-clock
                    content_info: state
                    tap_action:
                      action: more-info
                  - type: entity
                    entity: sensor.mainsailos_print_eta
                    icon: mdi:clock-end
                    content_info: state
                    tap_action:
                      action: more-info
                  - type: entity
                    entity: sensor.mainsailos_print_time_left
                    icon: mdi:timer-outline
                    content_info: state
                    tap_action:
                      action: more-info
                  - type: template
                    entity: sensor.mainsailos_current_layer
                    icon: mdi:layers-triple
                    content: >
                      {{ states('sensor.mainsailos_current_layer')|int(0) }}/{{
                      states('sensor.mainsailos_total_layer')|int(0) }}
                    tap_action:
                      action: more-info
                  - type: template
                    entity: binary_sensor.mainsailos_switch_sensor
                    icon: mdi:spool
                    icon_color: >
                      {{ 'green' if
                      is_state('binary_sensor.mainsailos_switch_sensor','on')
                      else 'red' }}
                    content: >
                      {{ 'Filament (Entry)' if
                      is_state('binary_sensor.mainsailos_switch_sensor','on')
                      else 'No filament (Entry)' }}
                    tap_action:
                      action: more-info
                  - type: template
                    entity: binary_sensor.mainsailos_toolhead_switch_sensor
                    icon: mdi:spool
                    icon_color: >
                      {{ 'green' if
                      is_state('binary_sensor.mainsailos_toolhead_switch_sensor','on')
                      else 'red' }}
                    content: >
                      {{ 'Filament (Toolhead)' if
                      is_state('binary_sensor.mainsailos_toolhead_switch_sensor','on')
                      else 'No filament (Toolhead)' }}
                    tap_action:
                      action: more-info
                  - type: template
                    entity: binary_sensor.mainsailos_motion_sensor
                    icon: mdi:spool
                    icon_color: >
                      {{ 'green' if
                      is_state('binary_sensor.mainsailos_motion_sensor','on')
                      else 'red' }}
                    content: >
                      {{ 'Filament (Motion)' if
                      is_state('binary_sensor.mainsailos_motion_sensor','on')
                      else 'No filament (Motion)' }}
                    tap_action:
                      action: more-info
              - type: custom:mushroom-template-card
                icon: mdi:message-text-outline
                primary: |
                  {{ states('sensor.mainsailos_printer_message')
                     or states('sensor.mainsailos_current_print_message')
                     or states('sensor.mainsailos_current_display_message')
                     or '—' }}
                multiline_secondary: false
                tap_action:
                  action: more-info
                  entity: sensor.mainsailos_printer_message
                card_mod:
                  style: |
                    ha-card { border-radius: 12px; }
              - type: grid
                columns: 2
                square: false
                cards:
                  - show_state: false
                    show_name: false
                    camera_view: live
                    fit_mode: cover
                    type: picture-entity
                    entity: camera.mainsailos_c270
                    aspect_ratio: 16x9
                    card_mod:
                      style: |
                        ha-card { border-radius: 16px; overflow: hidden; }
                  - type: custom:mushroom-template-card
                    icon: mdi:progress-clock
                    primary: >-
                      Progress {{
                      (states('sensor.mainsailos_progress')|float(0))|round(0)
                      }}%
                    secondary: >-
                      {{ states('sensor.mainsailos_current_print_state')|title
                      }} • {{ states('sensor.mainsailos_print_time_left') }}
                      left • ETA {{ states('sensor.mainsailos_print_eta') }} •
                      Layer {{ states('sensor.mainsailos_current_layer')|int(0)
                      }}/{{ states('sensor.mainsailos_total_layer')|int(0) }}
                    multiline_secondary: true
                    fill_container: true
                    tap_action:
                      action: more-info
                      entity: sensor.mainsailos_progress
                    card_mod:
                      style: |
                        ha-card {
                          border-radius: 16px;
                          aspect-ratio: 16/9;   /* match camera height */
                          display: flex;
                        }
                        .container, .content {
                          display: flex; flex-direction: column; justify-content: center;
                        }
                        .primary {
                          font-size: clamp(24px, 5.5vw, 40px);
                          font-weight: 800; line-height: 1.05;
                        }
                        .secondary {
                          margin-top: 6px; white-space: normal; opacity: .85;
                          font-size: clamp(12px, 1.6vw, 14px);
                        }
              - type: horizontal-stack
                cards:
                  - type: conditional
                    conditions:
                      - entity: sensor.mainsailos_current_print_state
                        state: printing
                    card:
                      type: custom:button-card
                      name: Pause
                      icon: mdi:pause
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.mainsailos_pause_print
                        confirmation:
                          text: Pause the current print?
                      styles:
                        card:
                          - border-radius: 14px
                          - padding: 14px
                          - font-weight: 600
                          - background: '#f59e0b'
                          - color: '#111'
                        icon:
                          - width: 28px
                  - type: conditional
                    conditions:
                      - entity: sensor.mainsailos_current_print_state
                        state: paused
                    card:
                      type: custom:button-card
                      name: Resume
                      icon: mdi:play
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.mainsailos_resume_print
                        confirmation:
                          text: Resume the current print?
                      styles:
                        card:
                          - border-radius: 14px
                          - padding: 14px
                          - font-weight: 600
                          - background: '#22c55e'
                          - color: white
                        icon:
                          - width: 28px
                  - type: conditional
                    conditions:
                      - entity: sensor.mainsailos_current_print_state
                        state_not: idle
                    card:
                      type: custom:button-card
                      name: Cancel
                      icon: mdi:stop-circle
                      tap_action:
                        action: call-service
                        service: button.press
                        target:
                          entity_id: button.mainsailos_cancel_print
                        confirmation:
                          text: Cancel the current print?
                      styles:
                        card:
                          - border-radius: 14px
                          - padding: 14px
                          - font-weight: 600
                          - background: '#ef4444'
                          - color: white
                        icon:
                          - width: 28px
                  - type: custom:button-card
                    name: E-Stop
                    icon: mdi:car-brake-alert
                    hold_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.mainsailos_emergency_stop
                      confirmation:
                        text: EMERGENCY STOP — hold to confirm
                    tap_action:
                      action: call-service
                      service: button.press
                      target:
                        entity_id: button.mainsailos_emergency_stop
                      confirmation:
                        text: EMERGENCY STOP — are you sure?
                    styles:
                      card:
                        - border-radius: 14px
                        - padding: 14px
                        - font-weight: 700
                        - background: '#b91c1c'
                        - color: white
                      icon:
                        - width: 28px
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: Temperatures (last 2 h)
                graph_span: 2h
                now:
                  show: true
                yaxis:
                  - min: 0
                    decimals: 0
                series:
                  - entity: sensor.mainsailos_extruder_temperature
                    name: Nozzle
                    type: line
                    stroke_width: 2
                  - entity: sensor.mainsailos_bed_temperature
                    name: Bed
                    type: line
                    stroke_width: 2
                  - entity: sensor.mainsailos_chamber_temp
                    name: Chamber
                    type: line
                    stroke_width: 2
                  - entity: sensor.mainsailos_hotend_heatsink_temp
                    name: Heatsink
                    type: line
                    stroke_width: 2
              - type: custom:apexcharts-card
                header:
                  show: true
                  title: Heater Power (last 2 h)
                graph_span: 2h
                now:
                  show: true
                yaxis:
                  - min: 0
                    max: 100
                    decimals: 0
                series:
                  - entity: sensor.mainsailos_bed_power
                    name: Bed %
                    type: area
                    group_by:
                      func: avg
                      duration: 30s
                  - entity: sensor.mainsailos_extruder_power
                    name: Nozzle %
                    type: area
                    group_by:
                      func: avg
                      duration: 30s
              - type: custom:expander-card
                title: Detailed controls
                clear-children: true
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-number-card
                        entity: number.mainsailos_extruder_target
                        name: Nozzle target (°C)
                        layout: horizontal
                        display_mode: slider
                      - type: custom:mushroom-number-card
                        entity: number.mainsailos_bed_target
                        name: Bed target (°C)
                        layout: horizontal
                        display_mode: slider
                      - type: custom:mushroom-number-card
                        entity: number.mainsailos_speed_factor
                        name: Speed factor (%)
                        layout: horizontal
                        display_mode: slider
                      - type: custom:mushroom-number-card
                        entity: number.mainsailos_fan_speed
                        name: Part Fan (%)
                        layout: horizontal
                        display_mode: slider
                      - type: custom:mushroom-entity-card
                        entity: sensor.mainsailos_controller_fans
                        name: Controller Fans
                        layout: horizontal
                      - type: custom:mushroom-entity-card
                        entity: sensor.mainsailos_hotend_fan
                        name: Hotend Fan
                      - type: custom:mushroom-entity-card
                        entity: sensor.mainsailos_filter
                        name: Filter
              - type: custom:expander-card
                title: Commands
                clear-children: true
                cards:
                  - type: grid
                    columns: 3
                    square: false
                    cards:
                      - type: custom:button-card
                        name: Home All
                        icon: mdi:home-variant
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_home_all_axes
                          confirmation:
                            text: Home X/Y/Z?
                      - type: custom:button-card
                        name: Home X
                        icon: mdi:axis-x-arrow
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_home_x_axis
                          confirmation:
                            text: Home X?
                      - type: custom:button-card
                        name: Home Y
                        icon: mdi:axis-y-arrow
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_home_y_axis
                          confirmation:
                            text: Home Y?
                      - type: custom:button-card
                        name: Home Z
                        icon: mdi:axis-z-arrow
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_home_z_axis
                          confirmation:
                            text: Home Z?
                      - type: custom:button-card
                        name: Heaters Off
                        icon: mdi:power-sleep
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_turn_off_heaters
                          confirmation:
                            text: Turn off all heaters?
                      - type: custom:button-card
                        name: Park
                        icon: mdi:parking
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_park
                          confirmation:
                            text: Park toolhead?
                  - type: grid
                    columns: 3
                    square: false
                    cards:
                      - type: custom:button-card
                        name: Clean Nozzle
                        icon: mdi:water
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_clean_nozzle
                          confirmation:
                            text: Run nozzle clean?
                      - type: custom:button-card
                        name: Prime Line
                        icon: mdi:ray-start-arrow
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_prime_line
                          confirmation:
                            text: Prime line now?
                      - type: custom:button-card
                        name: Load Filament
                        icon: mdi:arrow-down-bold
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_load_filament
                          confirmation:
                            text: Load filament?
                      - type: custom:button-card
                        name: Unload Filament
                        icon: mdi:arrow-up-bold
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_unload_filament
                          confirmation:
                            text: Unload filament?
                      - type: custom:button-card
                        name: Bed Mesh
                        icon: mdi:grid
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_bed_mesh_calibrate
                          confirmation:
                            text: Start bed mesh calibrate?
                      - type: custom:button-card
                        name: QGL
                        icon: mdi:axis-z-rotate-counterclockwise
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_macro_quad_gantry_level
                          confirmation:
                            text: Run QGL?
                  - type: grid
                    columns: 3
                    square: false
                    cards:
                      - type: custom:button-card
                        name: Restart Klipper
                        icon: mdi:restart
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_restart_klipper
                          confirmation:
                            text: Restart Klipper service?
                      - type: custom:button-card
                        name: Host Restart
                        icon: mdi:server
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_host_restart
                          confirmation:
                            text: Restart host?
                      - type: custom:button-card
                        name: Host Shutdown
                        icon: mdi:power
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_host_shutdown
                          confirmation:
                            text: Shut down the host?
                      - type: custom:button-card
                        name: Update Refresh
                        icon: mdi:update
                        tap_action:
                          action: call-service
                          service: button.press
                          target:
                            entity_id: button.mainsailos_machine_update_refresh
                          confirmation:
                            text: Refresh update info?
    icon: mdi:printer-3d-nozzle
    cards: []
  - type: sections
    max_columns: 1
    icon: mdi:car
    path: cars
    sections:
      - type: grid
        cards:
          - type: picture
            image_entity: image.volvo_yv12zek97rs028378_exterior_front_driver
            tap_action:
              action: perform-action
              perform_action: button.press
              target:
                entity_id: button.volvo_yv1xzedvxp2974472_update_data_2
          - type: tile
            entity: sensor.volvo_yv12zek97rs028378_battery_charge_level_2
            features_position: bottom
            vertical: false
            name: Battery
          - type: tile
            entity: lock.volvo_yv12zek97rs028378_lock
            features_position: bottom
            vertical: false
            name: Lock
          - type: tile
            entity: button.volvo_yv12zek97rs028378_climatization_start
            features_position: bottom
            vertical: false
            name: AC ON
          - type: tile
            entity: button.volvo_yv12zek97rs028378_climatization_stop
            features_position: bottom
            vertical: false
            name: AC OFF
            icon: mdi:air-conditioner
      - type: grid
        cards:
          - type: picture
            image_entity: image.volvo_yv1xzedvxp2974472_exterior_front_driver
            tap_action:
              action: perform-action
              perform_action: button.press
              target:
                entity_id: button.volvo_yv1xzedvxp2974472_update_data_2
          - type: tile
            entity: sensor.volvo_yv1xzedvxp2974472_battery_charge_level_2
            features_position: bottom
            vertical: false
            name: Battery
          - type: tile
            entity: lock.volvo_yv1xzedvxp2974472_lock
            features_position: bottom
            vertical: false
            name: Lock
          - type: tile
            entity: button.volvo_yv1xzedvxp2974472_climatization_start
            features_position: bottom
            vertical: false
            name: AC ON
          - type: tile
            entity: button.volvo_yv1xzedvxp2974472_climatization_stop
            features_position: bottom
            vertical: false
            name: AC OFF
      - type: grid
        cards:
          - type: custom:apexcharts-card
            graph_span: 24h
            header:
              title: Nordpool today (€/kWh)
              show: true
            span:
              start: day
            now:
              show: true
              label: Now
            series:
              - entity: sensor.nordpool_kwh_ee_eur
                type: column
                float_precision: 4
                data_generator: |
                  return entity.attributes.raw_today.map((start, index) => {
                    return [new Date(start["start"]).getTime(), entity.attributes.raw_today[index]["value"]];
                  });
          - type: custom:apexcharts-card
            graph_span: 1d
            header:
              title: Nordpool tomorrow (€/kWh)
              show: true
            span:
              start: day
              offset: +1d
            series:
              - entity: sensor.nordpool_kwh_ee_eur
                type: column
                float_precision: 4
                data_generator: |
                  return entity.attributes.raw_tomorrow.map((start, index) => {
                    return [new Date(start["start"]).getTime(), entity.attributes.raw_tomorrow[index]["value"]];
                  });
          - type: vertical-stack
            cards:
              - type: custom:mushroom-chips-card
                chips:
                  - type: template
                    entity: sensor.electricity_price
                    content: '{{ states(''sensor.electricity_price'') }} €/kWh'
                    icon: mdi:currency-eur
                    icon_color: |-
                      {% if states('sensor.electricity_price')|float(0)
                           <= states('input_number.acceptable_electricity_price')|float(0) %}
                        green
                      {% else %}
                        red
                      {% endif %}
                    tap_action:
                      action: more-info
                  - type: template
                    entity: light.smartevse_wled
                    content: |-
                      {% if is_state('light.smartevse_wled','on') %}
                        {{ states('select.smartevse_wled_preset') }}
                      {% else %}WLED Off{% endif %}
                    icon: >-
                      {% if is_state('light.smartevse_wled','on')
                      %}mdi:led-strip-variant{% else %}mdi:led-off{% endif %}
                    icon_color: >-
                      {% if is_state('light.smartevse_wled','on') %}blue{% else
                      %}grey{% endif %}
                    tap_action:
                      action: more-info
              - type: custom:mushroom-template-card
                entity: sensor.smartevse_state
                entity_id:
                  - sensor.smartevse_state
                  - sensor.smartevse_evplugstate
                  - sensor.smartevse_state
                  - sensor.smartevse_evplugstate
                  - select.smartevse_mode
                  - sensor.smartevse_chargecurrent
                  - input_boolean.charging_schedule_state
                  - schedule.charge_schedule
                primary: |-
                  {% if is_state('sensor.smartevse_evplugstate','Connected') %}
                      {% set s = states('sensor.smartevse_state')|trim %}
                      {% if s == 'Charging' %}Charging
                      {% elif s == 'Ready to Charge' %}Ready to charge
                      {% elif s == 'Connected to EV' %}Connected to EV
                      {% elif s == 'Charging Stopped' %}Charging stopped
                      {% elif s == 'Stop Charging' %}Charging stopping
                      {% else %}Idle{% endif %}
                    {% else %}Unplugged{% endif %}
                secondary: >-
                  {%- set gate =
                  is_state('input_boolean.charging_schedule_state','on') -%}
                    {%- if gate -%}
                      {%- set sched_on = is_state('schedule.charge_schedule','on') -%}
                      {%- set ne = state_attr('schedule.charge_schedule','next_event') -%}
                      {%- if sched_on -%}
                  Schedule: On now{%- if ne -%}, ends {{ as_timestamp(ne) |
                  timestamp_custom('%a %H:%M', true) }}{%- endif -%}
                      {%- else -%}
                  Schedule: armed{%- if ne -%}, starts at {{ as_timestamp(ne) |
                  timestamp_custom('%a %H:%M', true) }}{%- endif -%}
                      {%- endif -%}
                    {%- else -%}
                  Schedule: Disabled
                    {%- endif -%}

                  {{'\n'}}Plug: {{ states('sensor.smartevse_evplugstate') }}

                  Mode: {{ states('select.smartevse_mode') }}

                  Charging current: {{ states('sensor.smartevse_chargecurrent')
                  }} A
                icon: >-
                  {% set s = states('sensor.smartevse_state')|trim %}

                  {% if not is_state('sensor.smartevse_evplugstate','Connected')
                  %}
                      mdi:power-plug-off-outline
                    {% elif s == 'Charging' %}
                      mdi:ev-station
                    {% elif s in ['Ready to Charge','Connected to EV'] %}
                      mdi:ev-plug-type2
                    {% else %}
                      mdi:ev-station
                    {% endif %}
                icon_color: |2-
                    {% set s = states('sensor.smartevse_state')|trim %}
                    {% if s == 'Charging' %}amber
                    {% elif is_state('sensor.smartevse_evplugstate','Connected') %}blue
                    {% else %}grey{% endif %}
                multiline_secondary: true
                tap_action:
                  action: none
                fill_container: false
              - type: custom:mushroom-template-card
                entity: input_boolean.force_charge_state
                primary: Force charge
                secondary: >-
                  {% if is_state('input_boolean.force_charge_state','on')
                  %}Active{% else %}Tap to start{% endif %}
                icon: mdi:lightning-bolt
                icon_color: >-
                  {{ 'green' if
                  is_state('input_boolean.force_charge_state','on') else 'grey'
                  }}
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                fill_container: true
              - type: custom:mushroom-template-card
                entity: >-
                  input_boolean.force_charge_with_acceptable_electricity_price_state
                primary: >-
                  Force charge when ≤ {{
                  states('input_number.acceptable_electricity_price') }} €/kWh
                secondary: >-
                  {% if
                  is_state('input_boolean.force_charge_with_acceptable_electricity_price_state','on')
                  %}
                    {% if states('sensor.electricity_price')|float(0) <= states('input_number.acceptable_electricity_price')|float(0) %}
                      Acceptable price, charging
                    {% else %}
                      Waiting for price
                    {% endif %}
                  {% else %}
                    Tap to arm
                  {% endif %}
                icon: mdi:currency-eur
                icon_color: >-
                  {{ 'green' if
                  is_state('input_boolean.force_charge_with_acceptable_electricity_price_state','on')
                  else 'grey' }}
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                fill_container: true
              - type: custom:expander-card
                title: Charging options
                icon: mdi:tune-variant
                title-card-button-overlay: true
                title-card-clickable: true
                expanded: false
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-entity-card
                        entity: input_boolean.charging_schedule_state
                        name: Charge on schedule
                        icon: mdi:calendar-clock
                        layout: vertical
                      - type: conditional
                        conditions:
                          - entity: input_boolean.charging_schedule_state
                            state: 'on'
                        card:
                          type: custom:mushroom-entity-card
                          entity: schedule.charge_schedule
                          name: Active schedule
                          icon: mdi:clock-outline
                          layout: vertical
                      - type: entities
                        show_header_toggle: false
                        entities:
                          - entity: input_number.acceptable_electricity_price
                            name: Acceptable €/kWh
                      - type: custom:mushroom-entity-card
                        entity: input_datetime.force_charge_time
                        name: Timer length
                        icon: mdi:timer-cog-outline
                        layout: vertical
                    card_mod:
                      style: |
                        #root > * { margin: 8px 0 !important; }
                        #root > *:last-child { margin-bottom: 0 !important; }
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_1_phase_a_current
                line_color: brown
                line_width: 8
                font_size: 75
                name: L1 (A)
                icon: mdi:home-lightning-bolt
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_1_phase_b_current
                line_color: black
                line_width: 8
                font_size: 75
                name: L2 (B)
                icon: mdi:home-lightning-bolt
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_1_phase_c_current
                line_color: grey
                line_width: 8
                font_size: 75
                name: L3 (C)
                icon: mdi:home-lightning-bolt
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
          - type: horizontal-stack
            cards:
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_2_phase_a_current
                line_color: brown
                line_width: 8
                font_size: 75
                name: L1 (A)
                icon: mdi:car-electric
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_2_phase_b_current
                line_color: black
                line_width: 8
                font_size: 75
                name: L2 (B)
                icon: mdi:car-electric
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
              - type: custom:mini-graph-card
                entities:
                  - sensor.shelly_pro_3em_2_phase_c_current
                line_color: grey
                line_width: 8
                font_size: 75
                name: L3 (C)
                icon: mdi:car-electric
                update_interval: 5
                hour24: true
                align_icon: left
                animate: true
    cards: []
    title: Cars
  - type: sections
    max_columns: 1
    icon: mdi:cog
    path: home-details
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.vallox_co2
                    name: CO2
                    show_state: true
                name: Vallox CO2
                hours_to_show: 24
                points_per_hour: 6
              - type: custom:mini-graph-card
                entities:
                  - entity: sensor.home_humidity_average
                    name: Average
                    show_state: true
                  - entity: sensor.vallox_humidity
                    name: Vallox
                    show_state: true
                name: Home humidity
                hours_to_show: 24
                points_per_hour: 60
              - type: custom:mushroom-fan-card
                entity: fan.vallox
                icon_animation: true
                show_percentage_control: true
                show_oscillate_control: false
                collapsible_controls: true
                fill_container: true
                layout: horizontal
              - type: entities
                entities:
                  - input_boolean.vallox_fan_speed_scene_at_home
              - type: entities
                entities:
                  - entity: input_boolean.ventilation_automation_state
                    name: Automation
                  - entity: input_number.ventilation_automation_trigger_humidity_value
                    name: Trigger
                  - entity: input_number.vallox_fan_speed_home_value
                    name: Home
                  - entity: input_number.vallox_fan_speed_boost_value
                    name: Boost
                  - entity: input_number.vallox_fan_speed_away_value
                    name: Away
              - type: entities
                entities:
                  - entity: input_number.elektrilevi_electricity_excise_duty
                  - entity: input_number.elektrilevi_renewable_energy_charge
                  - entity: >-
                      input_number.elektrilevi_electricity_transmission_price_night
                  - entity: >-
                      input_number.elektrilevi_electricity_transmission_price_day
                  - entity: schedule.electricity_transmission_day
                  - entity: sensor.elektrilevi_electricity_transmission_price_now
                  - entity: input_number.elektrilevi_monthly_fee
                  - entity: input_number.eesti_energia_margin
                  - entity: input_number.eesti_energia_renewable_energy_charge
                  - entity: input_number.eesti_energia_monthly_fee
              - type: custom:mushroom-template-card
                primary: >-
                  Average home temperature: {{
                  states('sensor.home_temperature_average') }}°C
                secondary: >-
                  Average home humidity: {{
                  states('sensor.home_humidity_average') }}%
                icon: mdi:home-thermometer-outline
                fill_container: false
                multiline_secondary: false
                tap_action:
                  action: navigate
                  navigation_path: /utility-room/thermostats
                icon_color: orange
              - type: vertical-stack
                cards:
                  - type: entity
                    entity: input_boolean.keep_one_thermostat_on_state
                    state_color: true
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_1
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_2
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_3
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_4
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_5_7_group
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_6
                    show_temperature_control: true
                    layout: horizontal
                  - type: custom:mushroom-climate-card
                    entity: climate.thermostat_8
                    show_temperature_control: true
                    layout: horizontal
              - type: vertical-stack
                cards:
                  - type: horizontal-stack
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.f1255_6_r_status
                        primary: System Status
                        secondary: '{{ states(''sensor.f1255_6_r_status'') }}'
                        icon: mdi:heat-pump
                        icon_color: >
                          {% set s = (states('sensor.f1255_6_r_status') |
                          string) | lower %} {% if s in ['operating','hot
                          water','heating','pool','cooling','pool
                          2','defrosting'] %}
                            green
                          {% elif s in
                          ['starting','stopping','preheat','initiating','blocked','ext
                          control'] %}
                            orange
                          {% elif s in ['off','unavailable','unknown','none'] %}
                            grey
                          {% else %}
                            red
                          {% endif %}
                        tap_action:
                          action: more-info
                      - type: custom:mushroom-template-card
                        entity: binary_sensor.f1255_6_r_alarm
                        primary: Alarm
                        secondary: >-
                          {{ 'Active' if
                          is_state('binary_sensor.f1255_6_r_alarm','on') else
                          'OK' }}
                        icon: mdi:alert-circle
                        icon_color: >
                          {% if is_state('binary_sensor.f1255_6_r_alarm','on')
                          %}red {% elif states('binary_sensor.f1255_6_r_alarm')
                          in ['unavailable','unknown'] %}grey {% else %}green{%
                          endif %}
                        tap_action:
                          action: more-info
                      - type: custom:mushroom-template-card
                        entity: binary_sensor.f1255_6_r_connectivity
                        primary: Online
                        secondary: >-
                          {{ 'Connected' if
                          is_state('binary_sensor.f1255_6_r_connectivity','on')
                          else 'Disconnected' }}
                        icon: mdi:wifi
                        icon_color: >
                          {% if
                          is_state('binary_sensor.f1255_6_r_connectivity','on')
                          %}green {% elif
                          states('binary_sensor.f1255_6_r_connectivity') in
                          ['unavailable','unknown'] %}grey {% else %}red{% endif
                          %}
                        tap_action:
                          action: more-info
                  - type: custom:apexcharts-card
                    header:
                      show: true
                      title: Temperature Overview (24h)
                      show_states: true
                      colorize_states: true
                    graph_span: 24h
                    update_interval: 5min
                    all_series_config:
                      stroke_width: 2
                      curve: smooth
                    series:
                      - entity: sensor.f1255_6_r_outdoor_temperature
                        name: Outdoor
                        color: '#03A9F4'
                        show:
                          in_header: true
                          name_in_header: true
                      - entity: sensor.f1255_6_r_supply_line_bt2
                        name: Supply
                        color: '#FF5722'
                        show:
                          in_header: true
                          name_in_header: true
                      - entity: sensor.f1255_6_r_return_line_bt3
                        name: Return
                        color: '#FF9800'
                        show:
                          in_header: true
                          name_in_header: true
                      - entity: sensor.f1255_6_r_hot_water_charging_bt6
                        name: HW Charging
                        color: '#E91E63'
                        show:
                          in_header: true
                          name_in_header: true
                      - entity: sensor.f1255_6_r_hot_water_top_bt7
                        name: HW Top
                        color: '#9C27B0'
                        show:
                          in_header: true
                          name_in_header: true
                  - type: custom:mushroom-chips-card
                    alignment: justify
                    chips:
                      - type: template
                        entity: select.f1255_6_r_comfort_mode
                        icon: mdi:home-thermometer
                        content: 'Comfort: {{ states(''select.f1255_6_r_comfort_mode'') }}'
                        tap_action:
                          action: more-info
                      - type: template
                        entity: switch.f1255_6_r_temporary_lux
                        icon: mdi:thermometer-plus
                        icon_color: >-
                          {{ 'yellow' if
                          is_state('switch.f1255_6_r_temporary_lux','on') else
                          'grey' }}
                        content: >-
                          Temp Lux: {{ 'On' if
                          is_state('switch.f1255_6_r_temporary_lux','on') else
                          'Off' }}
                        tap_action:
                          action: more-info
                        hold_action:
                          action: toggle
                        double_tap_action:
                          action: toggle
                      - type: template
                        entity: switch.f1255_6_r_smart_control
                        icon: mdi:brain
                        icon_color: >-
                          {{ 'green' if
                          is_state('switch.f1255_6_r_smart_control','on') else
                          'grey' }}
                        content: >-
                          Smart: {{ 'On' if
                          is_state('switch.f1255_6_r_smart_control','on') else
                          'Off' }}
                        tap_action:
                          action: more-info
                        hold_action:
                          action: toggle
                        double_tap_action:
                          action: toggle
                      - type: template
                        entity: select.f1255_6_r_hot_water_boost
                        icon: mdi:water-boiler-auto
                        content: >-
                          Boost: {{ states('select.f1255_6_r_hot_water_boost')
                          }}
                        tap_action:
                          action: more-info
                  - type: custom:expander-card
                    title: Brine Circuit
                    padding: 12
                    child-padding: 12
                    title-card:
                      type: custom:mushroom-template-card
                      primary: Brine Circuit
                      secondary: >
                        {% set bi = states('sensor.f1255_6_r_brine_in_bt10') %}
                        {% set bo = states('sensor.f1255_6_r_brine_out_bt11') %}
                        {% if bi not in ['unavailable','unknown','none'] and bo
                        not in ['unavailable','unknown','none'] %}
                          In: {{ bi }}°C | Out: {{ bo }}°C | Δ: {{ (bo|float - bi|float)|round(1) }}°C
                        {% else %}Temperature data unavailable{% endif %}
                      icon: mdi:pipe
                      icon_color: >
                        {% set t =
                        states('sensor.f1255_6_r_brine_in_bt10')|float(0) %} {%
                        if t > -2 %}green{% elif t > -8 %}orange{% else %}red{%
                        endif %}
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_brine_in_bt10
                                name: Brine In (BT10)
                                icon: mdi:thermometer-chevron-down
                                icon_color: blue
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_brine_out_bt11
                                name: Brine Out (BT11)
                                icon: mdi:thermometer-chevron-up
                                icon_color: orange
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_brine_pump_speed_gp2
                                name: Pump Speed
                                icon: mdi:pump
                                icon_color: green
                          - type: custom:apexcharts-card
                            header:
                              show: false
                            graph_span: 6h
                            update_interval: 5min
                            all_series_config:
                              stroke_width: 2
                              curve: smooth
                            series:
                              - entity: sensor.f1255_6_r_brine_in_bt10
                                name: Brine In
                                color: '#2196F3'
                              - entity: sensor.f1255_6_r_brine_out_bt11
                                name: Brine Out
                                color: '#FF9800'
                        card_mod:
                          style: >
                            #root > * { margin: 12px 0 !important; }

                            #root > *:first-child { margin-top: 0 !important; }

                            #root > *:last-child { margin-bottom: 0 !important;
                            }
                  - type: custom:expander-card
                    title: Compressor Performance
                    padding: 12
                    child-padding: 12
                    title-card:
                      type: custom:mushroom-template-card
                      primary: Compressor
                      secondary: >
                        {% set st = states('sensor.f1255_6_r_status_compressor')
                        %} {% set hz =
                        states('sensor.f1255_6_r_current_compressor_frequency')
                        %} {{ st }} | {{ hz }}Hz
                      icon: mdi:engine
                      icon_color: >
                        {% set s =
                        (states('sensor.f1255_6_r_status_compressor')|string)|lower
                        %} {% if 'running' in s %}green{% elif 'starting' in s
                        %}orange{% else %}grey{% endif %}
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_status_compressor
                                name: Status
                                icon: mdi:engine
                                icon_color: green
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_current_compressor_frequency
                                name: Frequency
                                icon: mdi:sine-wave
                                icon_color: blue
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_condenser_bt12
                                name: Condenser
                                icon: mdi:thermometer
                                icon_color: orange
                          - type: custom:apexcharts-card
                            header:
                              show: false
                            graph_span: 12h
                            update_interval: 5min
                            yaxis:
                              - id: frequency
                                min: 0
                                max: 100
                                apex_config:
                                  title:
                                    text: Frequency (Hz)
                              - id: temperature
                                opposite: true
                                apex_config:
                                  title:
                                    text: Temperature (°C)
                            series:
                              - entity: sensor.f1255_6_r_current_compressor_frequency
                                name: Frequency
                                color: '#2196F3'
                                yaxis_id: frequency
                              - entity: sensor.f1255_6_r_condenser_bt12
                                name: Condenser Temp
                                color: '#FF5722'
                                yaxis_id: temperature
                        card_mod:
                          style: >
                            #root > * { margin: 12px 0 !important; }

                            #root > *:first-child { margin-top: 0 !important; }

                            #root > *:last-child { margin-bottom: 0 !important;
                            }
                  - type: custom:expander-card
                    title: Hot Water System
                    padding: 12
                    child-padding: 12
                    title-card:
                      type: custom:mushroom-template-card
                      primary: Hot Water
                      secondary: >
                        {% set mode =
                        states('sensor.f1255_6_r_current_hot_water_mode') %} {%
                        set t = states('sensor.f1255_6_r_hot_water_top_bt7') %}
                        {{ mode }} | {{ t }}°C
                      icon: mdi:water-boiler
                      icon_color: >
                        {% set v =
                        states('sensor.f1255_6_r_hot_water_top_bt7')|float(0) %}
                        {% if v > 45 %}green{% elif v > 35 %}orange{% else
                        %}red{% endif %}
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_current_hot_water_mode
                                name: HW Mode
                                icon: mdi:water-boiler
                                icon_color: blue
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_hot_water_charging_bt6
                                name: Charging
                                icon: mdi:thermometer
                                icon_color: orange
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_hot_water_top_bt7
                                name: Top Tank
                                icon: mdi:thermometer
                                icon_color: red
                        card_mod:
                          style: >
                            #root > * { margin: 12px 0 !important; }

                            #root > *:first-child { margin-top: 0 !important; }

                            #root > *:last-child { margin-bottom: 0 !important;
                            }
                  - type: custom:expander-card
                    title: System Performance
                    padding: 12
                    child-padding: 12
                    title-card:
                      type: custom:mushroom-template-card
                      primary: Performance
                      secondary: >
                        {% set p1 =
                        states('binary_sensor.f1255_6_r_pump_heating_medium_gp1')
                        %} {% set p2 =
                        states('binary_sensor.f1255_6_r_pump_brine_gp2') %} GP1:
                        {{ p1 }} | GP2: {{ p2 }}
                      icon: mdi:chart-line
                      icon_color: green
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-entity-card
                                entity: >-
                                  binary_sensor.f1255_6_r_pump_heating_medium_gp1
                                name: Heating Pump
                                icon: mdi:pump
                                icon_color: green
                              - type: custom:mushroom-entity-card
                                entity: binary_sensor.f1255_6_r_pump_brine_gp2
                                name: Brine Pump
                                icon: mdi:pump
                                icon_color: blue
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_heating_medium_pump_speed_gp1
                                name: Pump Speed
                                icon: mdi:speedometer
                                icon_color: orange
                          - type: horizontal-stack
                            cards:
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_total_operating_time
                                name: Total Runtime
                                icon: mdi:clock-outline
                                icon_color: grey
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_number_of_compressor_starts
                                name: Starts
                                icon: mdi:restart
                                icon_color: blue
                              - type: custom:mushroom-entity-card
                                entity: sensor.f1255_6_r_degree_minutes
                                name: Degree Min
                                icon: mdi:thermometer-lines
                                icon_color: purple
                        card_mod:
                          style: >
                            #root > * { margin: 12px 0 !important; }

                            #root > *:first-child { margin-top: 0 !important; }

                            #root > *:last-child { margin-bottom: 0 !important;
                            }
                  - type: conditional
                    conditions:
                      - entity: sensor.f1255_6_r_status_smart_price_adaption
                        state_not: unavailable
                    card:
                      type: custom:expander-card
                      title: Smart Price Adaption
                      padding: 12
                      child-padding: 12
                      title-card:
                        type: custom:mushroom-template-card
                        primary: Smart Price Adaption
                        secondary: >-
                          Status: {{
                          states('sensor.f1255_6_r_status_smart_price_adaption')
                          }}
                        icon: mdi:currency-usd
                        icon_color: green
                      cards:
                        - type: vertical-stack
                          cards:
                            - type: horizontal-stack
                              cards:
                                - type: custom:mushroom-entity-card
                                  entity: sensor.f1255_6_r_status_smart_price_adaption
                                  name: Price Level
                                  icon: mdi:currency-usd
                                  icon_color: >
                                    {% set v =
                                    states('sensor.f1255_6_r_status_smart_price_adaption')|int(0)
                                    %} {% if v <= 10 %}green{% elif v <= 30
                                    %}orange{% else %}red{% endif %}
                                - type: custom:mushroom-entity-card
                                  entity: >-
                                    sensor.f1255_6_r_heating_offset_smart_price_adaption
                                  name: Heating Offset
                                  icon: mdi:thermometer-chevron-up
                                  icon_color: orange
                                - type: custom:mushroom-entity-card
                                  entity: >-
                                    sensor.f1255_6_r_cooling_offset_smart_price_adaption
                                  name: Cooling Offset
                                  icon: mdi:thermometer-chevron-down
                                  icon_color: blue
                          card_mod:
                            style: >
                              #root > * { margin: 12px 0 !important; }

                              #root > *:first-child { margin-top: 0 !important;
                              }

                              #root > *:last-child { margin-bottom: 0
                              !important; }
                  - type: custom:expander-card
                    title: Additional Sensors
                    padding: 12
                    child-padding: 12
                    title-card:
                      type: custom:mushroom-template-card
                      primary: Additional Sensors
                      secondary: Detailed temperature readings
                      icon: mdi:thermometer-lines
                      icon_color: grey
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: entities
                            show_header_toggle: false
                            entities:
                              - entity: sensor.f1255_6_r_discharge_bt14
                                name: Discharge (BT14)
                                icon: mdi:thermometer
                              - entity: sensor.f1255_6_r_liquid_line_bt15
                                name: Liquid Line (BT15)
                                icon: mdi:thermometer
                              - entity: sensor.f1255_6_r_suction_gas_bt17
                                name: Suction Gas (BT17)
                                icon: mdi:thermometer
                              - entity: sensor.f1255_6_r_inverter_temperature
                                name: Inverter Temperature
                                icon: mdi:thermometer
                              - entity: sensor.f1255_6_r_average_outdoor_temp_bt1
                                name: Average Outdoor (BT1)
                                icon: mdi:thermometer-minus
                        card_mod:
                          style: >
                            #root > * { margin: 12px 0 !important; }

                            #root > *:first-child { margin-top: 0 !important; }

                            #root > *:last-child { margin-bottom: 0 !important;
                            }
                  - type: conditional
                    conditions:
                      - entity: update.f1255_6_r_firmware
                        state_not: unavailable
                    card:
                      type: custom:expander-card
                      title: Firmware Status
                      padding: 12
                      child-padding: 12
                      title-card:
                        type: custom:mushroom-template-card
                        primary: Firmware Updates
                        secondary: >
                          {% if is_state('update.f1255_6_r_firmware','on') or
                          is_state('update.nibe_f1255_6_r_nibegw_firmware','on')
                          %}
                            Updates available
                          {% else %}Up to date{% endif %}
                        icon: mdi:update
                        icon_color: >
                          {% if is_state('update.f1255_6_r_firmware','on') or
                          is_state('update.nibe_f1255_6_r_nibegw_firmware','on')
                          %}
                            orange
                          {% else %}green{% endif %}
                      cards:
                        - type: vertical-stack
                          cards:
                            - type: horizontal-stack
                              cards:
                                - type: custom:mushroom-update-card
                                  entity: update.f1255_6_r_firmware
                                  name: Heat Pump
                                  show_buttons_control: true
                          card_mod:
                            style: >
                              #root > * { margin: 12px 0 !important; }

                              #root > *:first-child { margin-top: 0 !important;
                              }

                              #root > *:last-child { margin-bottom: 0
                              !important; }
    cards: []
    title: Home details
  - type: sections
    max_columns: 1
    icon: mdi:battery
    path: batteries
    title: Batteries
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - entity: sensor.aqara_light_sensor_1_battery
                  - entity: sensor.aqara_thp_1_battery
                  - entity: sensor.aqara_thp_2_battery
                  - entity: sensor.aqara_thp_3_battery
                  - entity: sensor.aqara_thp_4_battery
                  - entity: sensor.aqara_thp_5_battery
                  - entity: sensor.aqara_thp_6_battery
                  - entity: sensor.aqara_thp_7_battery
                  - entity: sensor.aqara_thp_8_battery
                  - entity: sensor.aqara_thp_9_battery
                  - entity: sensor.aqara_thp_10_battery
                  - entity: sensor.aqara_thp_11_battery
                  - entity: sensor.aqara_thp_12_battery
                  - entity: sensor.aqara_thp_13_battery
                  - entity: sensor.aqara_thp_14_battery
                  - entity: sensor.aqara_thp_15_battery
                  - entity: sensor.aqara_thp_16_battery
                  - entity: sensor.aqara_thp_17_battery
                  - entity: sensor.aqara_thp_18_battery
                  - entity: sensor.aqara_thp_19_battery
                  - entity: sensor.front_door_battery
                  - entity: sensor.ikea_fyrtur_roller_blind_1_battery
                  - entity: sensor.ikea_tradfri_on_off_switch_1_battery
                  - entity: sensor.ikea_badring_water_leakage_sensor_1_battery
                  - entity: sensor.moes_scene_switch_1_battery
                  - entity: sensor.moes_scene_switch_2_battery
                  - entity: sensor.moes_scene_switch_3_battery
                  - entity: sensor.moes_scene_switch_4_battery
                  - entity: sensor.shelly_motion_2_wc_1_battery
                  - entity: sensor.shelly_motion_2_wc_2_battery
                  - entity: sensor.ikea_parasoll_door_window_sensor_battery
                state_color: true
    cards: []
title: ''
